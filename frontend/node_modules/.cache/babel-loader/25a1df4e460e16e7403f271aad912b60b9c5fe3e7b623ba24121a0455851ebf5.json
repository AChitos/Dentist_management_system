{"ast":null,"code":"var _jsxFileName = \"/Users/andreaschitos1/Desktop/Dentist_management_system/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider Component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('zendenta_token'));\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axios.get('/api/auth/profile');\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('zendenta_token', newToken);\n      setToken(newToken);\n      setUser(userData);\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('zendenta_token');\n    setToken(null);\n    setUser(null);\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to update profile';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to change password';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token && !!user;\n\n  // Check user role\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = roles => {\n    return roles.includes(user === null || user === void 0 ? void 0 : user.role);\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    hasRole,\n    hasAnyRole,\n    fetchUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"S7z0H1u6y8grsT2ZO3+5E1wZTeI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","fetchUserProfile","response","get","data","error","console","logout","login","username","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","removeItem","updateProfile","profileData","put","_error$response2","_error$response2$data","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","isAuthenticated","hasRole","role","hasAnyRole","roles","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andreaschitos1/Desktop/Dentist_management_system/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create Auth Context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('zendenta_token'));\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    try {\n      const response = await axios.get('/api/auth/profile');\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n\n      const { token: newToken, user: userData } = response.data;\n      \n      // Store token\n      localStorage.setItem('zendenta_token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('zendenta_token');\n    setToken(null);\n    setUser(null);\n    delete axios.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put('/api/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to update profile';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to change password';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token && !!user;\n\n  // Check user role\n  const hasRole = (role) => {\n    return user?.role === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = (roles) => {\n    return roles.includes(user?.role);\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    hasRole,\n    hasAnyRole,\n    fetchUserProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}